# TODO: Update this!!! DO I EVEN WANT THIS????
openapi: "3.0.0"
info:
  description: "Chronicle API"
  version: "0.0.1"
  title: "Chronicle API"
  termsOfService: "http://api.openlattice.com/terms/"
  contact:
    email: "support@openlattice.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
    - url: "https://api.openlattice.com"
      description: "Production Chronicle API"
    - url: "https://api.staging.openlattice.com"
      description: "Staging Chronicle API"
paths:
  /data/ticket/{entitySetId}/{syncId}:
    post:
      summary: "Acquires a sync ticket"
      operationId: "acquireSyncTicket"
      parameters:
        - in: path
          name: entitySetId
          description: "The entity set id for which to acquire a sync ticket."
          required: true
          schema:
            $ref: "#/components/schemas/EntitySetId"
        - in: path
          name: syncId
          description: "The sync id for the entity being requested."
          required: true
          schema:
            $ref: "#/components/schemas/SyncId"
      responses:
        200:
          description: "A 128-bit random session id for synchronizing data."
components:
  securitySchemes:
    petstore_auth:
      type: "oauth2"
      flows:
        implicit:
          authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
          scopes:
            write:pets: "modify pets in your account"
            read:pets: "read your pets"
    openlattice_auth:
        type: "http"
        scheme: "bearer"
        bearerFormat: "JWT"
    api_key:
        type: "apiKey"
        name: "api_key"
        in: "header"
  schemas:
    SyncTicket:
      type: "string"
      format: "uuid"
    EntitySetId:
      type: "string"
      format: "uuid"
    SyncId:
      type: "string"
      format: "uuid"
    FullQualifiedName:
      type: "string"
      format: "FullQualifiedName"
    PropertyValues:
      oneOf:
        - type: string
        - type: number
        - type: boolean
    Property:
      type: "array"
      items:
        $ref: '#/components/schemas/PropertyValues'
    Entity:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Property'
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        phone:
          type: "string"
        userStatus:
          type: "integer"
          format: "int32"
          description: "User Status"
      xml:
        name: "User"
    ApiResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"


tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "store"
  description: "Access to Petstore orders"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"