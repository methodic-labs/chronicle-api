# TODO: Update this!!! DO I EVEN WANT THIS????
openapi: "3.0.0"
info:
  description: "Chronicle API"
  version: "0.0.1"
  title: "Chronicle API"
  termsOfService: "http://api.openlattice.com/terms/"
  contact:
    email: "support@openlattice.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
    - url: "https://api.openlattice.com"
      description: "Production Chronicle API"
    - url: "https://api.staging.openlattice.com"
      description: "Staging Chronicle API"
paths:
  /chronicle/data/{organizationId}/{studyId}/{participantId}/{dataSourceId}:
    post:
      summary: Writes log data for specific studyId and participantId using a specific deviceId to a specific entitySetId.
      operationId: upload
  /chronicle/data/edm:
    post:
      summary: Looks up property type ids for the requested property type FQNS (passed as Strings)
      operationId: getPropertyTypeIds
  /chronicle/data:
    get:
      summary: Check whether the server is running
      operationId: isRunning
  /chronicle/study/{organizationId}/{studyId}/{participantId}/{dataSourceId}:
    post:
      summary: Enrolls a participant's data datasource in a study. Currently the only supported datasource is an Android device, though that may change in the future.
      operationId: enrollSource
    get:
      summary: Verifies that a participant in a study is associated with a specific data source.
      operationId: isKnownDatasource
  /chronicle/study/{organizationId}/{studyId}/{participantId}:
    get:
      summary: Verify that a participants is part of this study.
      operationId: isKnownParticipant
  /chronicle/study/{organizationId}/{studyId}/{participantId}/apps:
    post:
      summary: Update chronicle_used_by associations when apps usage survey is submitted
      operationId: updateAppsUsageAssociationData
    get:
      summary: Get all apps usage data associated with a participant filtered by current date
      operationId: getParticipantAppsUsageData
  /chronicle/study/{organizationId}/{studyId}/notifications:
    get:
      summary: Verify that daily push notifications are enabled for participant devices associated with a study
      operationId: isNotificationsEnabled
  /chronicle/study/{organizationId}/{studyId}/{participantId}/status:
    get:
      summary: Query the enrollment status of a participant
      operationId: getParticipationStatus
  /chronicle/study/{organizationId}/questionnaire/{questionnaireId}:
    get:
      summary: Retrieve questionnaire matching given entity key id
      operationId: getChronicleQuestionnaire
  /chronicle/study/{organizationId}/{studyId}/{participantId}/questionnaire:
    post:
      summary: Submit a questionnaire
      operationId: submitQuestionnaire
  /chronicle/study/{organizationId}/{studyId}/questionnaire:
    get:
      summary: Get all questionnaires for a given study
      operationId: getStudyQuestionnaires

  # authenticated
  /chronicle/authenticated/{organizationId}/{studyId}/{participantId}:
    delete:
      summary: Delete a participant and their data.  Returns the number of entities removed.
      operationId: deleteParticipantAndAllNeighbors
  /chronicle/authenticated/{organizationId}/{studyId}:
    delete:
      summary: Delete a study and their attached neighbors.  Returns the number of entities removed.
      operationId: deleteStudyAndAllNeighbors
  /chronicle/authenticated/participant/data/{organizationId}/{studyId}/{participantEntityKeyId}:
    get:
      summary: Returns a file download containing all participant data (including neighbor data).
      operationId: getAllParticipantData
  /chronicle/authenticated/participant/data/{organizationId}/{studyId}/{participantEntityKeyId}/preprocessed:
    get:
      summary: Returns a file download containing preprocessed data.
      operationId: getAllPreprocessedParticipantData
  /chronicle/authenticated/participant/data/{organizationId}/{studyId}/{participantEntityKeyId}/usage:
    get:
      summary: Returns a file download containing user app usage data.
      operationId: getAllParticipantAppsUsageData

